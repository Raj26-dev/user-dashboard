{"ast":null,"code":"var _jsxFileName = \"/home/rajendragomeshwar/Documents/user-dashboard/src/components/UserListWithSearch.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useInfiniteUsers } from '../hooks/useInfiniteUsers';\nimport '../styles/UserListWithSearch.css'; // Importing the CSS for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserListWithSearch = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage\n  } = useInfiniteUsers(searchQuery);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"Search users...\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-search search-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"user-list\",\n      children: data === null || data === void 0 ? void 0 : data.pages.map((page, index) => page.results.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"user-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.picture.large,\n          alt: `${user.name.first} ${user.name.last}`,\n          className: \"user-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-name\",\n            children: [user.name.first, \" \", user.name.last]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-email\",\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)]\n      }, `${user.email}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), hasNextPage && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchNextPage(),\n      disabled: isFetchingNextPage,\n      className: \"load-more-btn\",\n      children: isFetchingNextPage ? 'Loading more...' : 'Load More'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(UserListWithSearch, \"WLPGj8gkJVQHYk3+pps5y1cTHdE=\", false, function () {\n  return [useInfiniteUsers];\n});\n_c = UserListWithSearch;\nexport default UserListWithSearch;\nvar _c;\n$RefreshReg$(_c, \"UserListWithSearch\");","map":{"version":3,"names":["React","useState","useInfiniteUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","UserListWithSearch","_s","searchQuery","setSearchQuery","data","fetchNextPage","hasNextPage","isFetchingNextPage","children","className","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","pages","map","page","index","results","user","src","picture","large","alt","name","first","last","email","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/rajendragomeshwar/Documents/user-dashboard/src/components/UserListWithSearch.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useInfiniteUsers } from '../hooks/useInfiniteUsers';\nimport '../styles/UserListWithSearch.css'; // Importing the CSS for styling\n\nconst UserListWithSearch: React.FC = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const {\n    data, fetchNextPage, hasNextPage, isFetchingNextPage,\n  } = useInfiniteUsers(searchQuery);\n\n  return (\n    <>\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n          placeholder=\"Search users...\"\n          className=\"search-input\"\n        />\n        <i className=\"fa fa-search search-icon\"></i>\n      </div>\n      <ul className=\"user-list\">\n        {data?.pages.map((page, index) => (\n          page.results.map(user => (\n            <li key={`${user.email}-${index}`} className=\"user-item\">\n              <img src={user.picture.large} alt={`${user.name.first} ${user.name.last}`} className=\"user-image\" />\n              <div className=\"user-info\">\n                <p className=\"user-name\">{user.name.first} {user.name.last}</p>\n                <p className=\"user-email\">{user.email}</p>\n              </div>\n            </li>\n          ))\n        ))}\n      </ul>\n      {hasNextPage && (\n        <button\n          onClick={() => fetchNextPage()}\n          disabled={isFetchingNextPage}\n          className=\"load-more-btn\"\n        >\n          {isFetchingNextPage ? 'Loading more...' : 'Load More'}\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default UserListWithSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}